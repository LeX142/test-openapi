FROM composer:2 as composer

FROM php:8.2-fpm-alpine

ENV TZ=Europe/Moscow
ENV DEBIAN_FRONTEND="noninteractive"
ENV COMPOSER_ALLOW_SUPERUSER 1
ENV ENV=/root/.bashrc

# Install dependencies
RUN set -eux \
    && apk update \
    && apk add --no-cache \
        mysql-client \
        c-client \
        ca-certificates \
        freetds \
        freetype \
        gettext \
        gmp \
        icu-libs \
        libgmpxx \
        libintl \
        libjpeg-turbo \
        libpng \
        libpq \
        libssh2 \
        libstdc++ \
        libtool \
        libxpm \
        libxslt \
        libzip \
        make \
        tidyhtml \
        tzdata \
        vips \
        openssh \
        zip \
        yaml \
        git \
        curl \
        wget \
        tini \
        bash
#############################################
### Install and enable PHP extensions
#############################################
# Development dependencies
RUN set -eux \
    && apk add --no-cache --virtual .build-deps \
        autoconf \
        automake \
        bzip2-dev \
        build-base \
        cmake \
        curl-dev \
        freetds-dev \
        freetype-dev \
        gawk \
        gcc \
        gettext-dev \
        git \
        gmp-dev \
        icu-dev \
        krb5-dev \
        libc-dev \
        libjpeg-turbo-dev \
        libpng-dev \
        libssh2-dev \
        libwebp-dev \
        libxml2-dev \
        libxpm-dev \
        libxslt-dev \
        libzip-dev \
        openssl-dev \
        pcre-dev \
        pkgconf \
        tidyhtml-dev \
        vips-dev \
        yaml-dev \
        zlib-dev \
        php82-dev \
# Clean up build packages
    && docker-php-source delete \
    && apk del .build-deps \
    && true

RUN set -eux \
# Fix php.ini settings for enabled extensions
    && chmod +x "$(php -r 'echo ini_get("extension_dir");')"/* \
# Shrink binaries
    && (find /usr/local/bin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2>/dev/null || true) \
    && (find /usr/local/lib -type f -print0 | xargs -n1 -0 strip --strip-all -p 2>/dev/null || true) \
    && (find /usr/local/sbin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2>/dev/null || true) \
    && ln -s /etc/ssl/cert.pem /etc/ssl/certs/cacert.pem \
    && mkdir -p /app/docker \
    && true

COPY --from=composer /usr/bin/composer /usr/local/bin/composer

WORKDIR /app
